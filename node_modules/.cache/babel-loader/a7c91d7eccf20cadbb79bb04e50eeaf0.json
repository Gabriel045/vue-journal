{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Counter -Vuex\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"h2\", null, \"direct access:\" + _toDisplayString(_ctx.$store.state.count), 1 /* TEXT */), _createElementVNode(\"h1\", null, \"maState:\" + _toDisplayString(_ctx.count), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.increment && $options.increment(...args))\n  }, \"increment +1\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.incrementBy && $options.incrementBy(...args))\n  }, \"increment +5\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.incrementRandom && $options.incrementRandom(...args))\n  }, \"random\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAsB,YAAlB,eAAa;;;6DAAjBC,UAAsB,EACtBD,oBAA+C,YAA3C,gBAAc,oBAAGE,WAAM,CAACC,KAAK,CAACC,KAAK,kBACvCJ,oBAA4B,YAAxB,UAAQ,oBAAGE,UAAK,kBAEpBF,oBAAgD;IAAvCK,OAAK,yCAAEC,iDAAS;KAAE,cAAY,GACvCN,oBAAkD;IAAzCK,OAAK,yCAAEC,qDAAW;KAAE,cAAY,GACzCN,oBAAgD;IAAvCK,OAAK,yCAAEC,6DAAe;KAAE,QAAM","names":["_createElementVNode","_hoisted_1","_ctx","state","count","onClick","$options"],"sourceRoot":"","sources":["/Users/gabriel.cabrera/Desktop/vue/vuex/src/components/CounterVue.vue"],"sourcesContent":["<template>\n  <h1>Counter -Vuex</h1>\n  <h2>direct access:{{ $store.state.count }}</h2>\n  <h1>maState:{{ count }}</h1>\n\n  <button @click=\"increment\">increment +1</button>\n  <button @click=\"incrementBy\">increment +5</button>\n  <button @click=\"incrementRandom\">random</button>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nexport default {\n  computed: {\n    ...mapState([\"count\"]),\n  },\n\n  methods: {\n    increment() {\n      this.$store.commit(\"increment\");\n    },\n    incrementBy() {\n      this.$store.commit(\"incrementBy\", 5);\n    },\n    incrementRandom() {\n      this.$store.dispatch(\"incrementRandomInt\");\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}